/*
LeetCode 2433
You are given an integer array pref of size n. Find and return the array arr of size n that satisfies:
pref[i] = arr[0] ^ arr[1] ^ ... ^ arr[i].
Note that ^ denotes the bitwise-xor operation.

It can be proven that the answer is unique.

Example 1:
Input: pref = [5,2,0,3,1]
Output: [5,7,2,3,2]
Explanation: From the array [5,7,2,3,2] we have the following:
- pref[0] = 5.
- pref[1] = 5 ^ 7 = 2.
- pref[2] = 5 ^ 7 ^ 2 = 0.
- pref[3] = 5 ^ 7 ^ 2 ^ 3 = 3.
- pref[4] = 5 ^ 7 ^ 2 ^ 3 ^ 2 = 1.
Example 2:
Input: pref = [13]
Output: [13]
Explanation: We have pref[0] = arr[0] = 13.
 
Constraints:
1 <= pref.length <= 105
0 <= pref[i] <= 106

*/
class Solution {
    public int[] findArray(int[] pref)
    {
        // Property 1)of XOR is 0^1 = 1 ,0^0=0 ,1^1=0 , 1^0=1
        //Property 2)  If a^b=c , then c^b=a and a^c=b

        /*int[] result=new int[pref.length];
         result[0]=pref[0];*/
         for(int i=1;i<pref.length;i++)
         {
            /* if(pref.length==1)
             {
                 result[0]=pref[0];
             }*/
           
             if(i==0)
             {
                 result[i]=pref[i];
             }
           else
           {
              result[i]=pref[i]^pref[i-1];
           }
            
         }
        return result;
    }
}

//Logic is, pref[0]=arr[0] , then pref[1]=>2=5^x=> 5^2=7 hence x=7 ,same way pref[2]=0=arr[0]^arr[1]^arr[2]=>5^7^x=2 hence x=>0 likewise..
