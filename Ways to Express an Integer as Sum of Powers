/*
Problem Statement:
Given two positive integers n and x.Return the number of ways n can be expressed as the sum of the xth power of unique positive integers, in other words, the number of sets of unique integers [n1, n2, ..., nk] where n = n1x + n2x + ... + nkx.
Since the result can be very large, return it modulo 109 + 7.For example, if n = 160 and x = 3, one way to express n is n = 23 + 33 + 53.

Example 1:

Input: n = 10, x = 2
Output: 1
Explanation: We can express n as the following: n = 32 + 12 = 10.
It can be shown that it is the only way to express 10 as the sum of the 2nd power of unique integers.

Example 2:
Input: n = 4, x = 1
Output: 2
Explanation: We can express n in the following ways:
- n = 41 = 4.
- n = 31 + 11 = 4.
 
Constraints:
1 <= n <= 300
1 <= x <= 5
*/
class Solution {
     int M=1000000007;
     int[][] dp;
     
    public int numberOfWays(int n, int x) 
    { 
       dp=new int[n+1][n+1];
       for(int i=0;i<=n;i++)
       {
        for(int j=0;j<=n;j++)
        {
            dp[i][j]=-1;
        }
       }
       return solve(1,n,x);

    }
    private int solve(int i,int n,int x)
    {
        
        if(n==0)
        {
            return 1;
        }
        int val=(int)Math.pow(i,x);
        if(val>n)
        {
            return 0;
        }
        if(dp[n][i]!=-1)
        {
            return dp[n][i];
        }
        int take=solve(i+1,n-val,x);
        int skip=solve(i+1,n,x);
        return dp[n][i]=(take+skip)%M;
    }
}
//TC:O(n*n)
//SC:O(n*n)
