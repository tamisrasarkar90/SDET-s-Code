/*
Problem Description::
You are given a string s of even length. Split this string into two halves of equal lengths, and let a be the first half and b be the second half.
Two strings are alike if they have the same number of vowels ('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'). Notice that s contains uppercase and lowercase letters.
Return true if a and b are alike. Otherwise, return false.

Example 1:
Input: s = "book"
Output: true
Explanation: a = "bo" and b = "ok". a has 1 vowel and b has 1 vowel. Therefore, they are alike.

Example 2:
Input: s = "textbook"
Output: false
Explanation: a = "text" and b = "book". a has 1 vowel whereas b has 2. Therefore, they are not alike.
Notice that the vowel o is counted twice.

Constraints:
2 <= s.length <= 1000
s.length is even.
s consists of uppercase and lowercase letters.

*/

class Solution {
    public boolean halvesAreAlike(String s)
    {
        int len=s.length();
        String first=s.substring(0,len/2);
        String second=s.substring(len/2);
        int vowelCountFirst=0;
        int vowelCountSecond=0;

        for(int i=0;i<first.length();i++)
        {
            if(isVowel(first.charAt(i)))
            {
                vowelCountFirst++;
            }
        }

         for(int i=0;i<second.length();i++)
        {
            if(isVowel(second.charAt(i)))
            {
                vowelCountSecond++;
            }
        }
        return vowelCountFirst==vowelCountSecond;
    }

    private boolean isVowel(char c)
    {
        if(c=='a'||c=='e'||c=='i'||c=='o'||c=='u'||c=='A'||c=='E'||c=='I'||c=='O'||c=='U')
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}

//TC:O(N)
//SC:O(1)
