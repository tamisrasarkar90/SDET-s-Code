/*
Problem Statement::  Given a string s, reverse the order of characters in each word within a sentence while still preserving whitespace and initial word order.

Example 1:
Input: s = "Let's take LeetCode contest"
Output: "s'teL ekat edoCteeL tsetnoc"

Example 2:
Input: s = "God Ding"
Output: "doG gniD"

Constraints:
    1 <= s.length <= 5 * 104
    s contains printable ASCII characters.
    s does not contain any leading or trailing spaces.
    There is at least one word in s.
    All the words in s are separated by a single space.
*/
//TC::O(N)
//SC::O(1)
class Solution {
    public String reverseWords(String s)
    {
        String[] st=s.split("\\s+");
        StringBuilder sb=new StringBuilder();
        for(int i=0;i<st.length;i++)
        {
           for(int j=st[i].length()-1;j>=0;j--)
           {
               sb.append(st[i].charAt(j));
           }
            sb.append(" ");
        }
        
      return sb.toString().trim();
    }
}
