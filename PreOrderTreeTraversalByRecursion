/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
//Preorder= root->left->right
class Solution {
    public List<Integer> preorderTraversal(TreeNode root) 
    {
        List<Integer> preorder =new ArrayList();
        dfs(root,preorder);
        return  preorder;
    }
    
 public void dfs(TreeNode node,List<Integer> preorder)   
 { 
        if(node==null)
        {
            return;
        }
        else
        {
            preorder.add(node.val);
            dfs(node.left,preorder);
            dfs(node.right,preorder);
        }
    }
}
