**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
//Preorder= root->left->right
class Solution {
    public List<Integer> preorderTraversal(TreeNode root) 
    {
        Stack<TreeNode> stack=new Stack<>();
        List<Integer> preorder=new ArrayList<>();
        if(root==null)
        {
        return preorder;
        }
        stack.push(root);        
        while(!stack.isEmpty())
        {
        root=stack.pop();
        preorder.add(root.val);
        if(root.right!=null)
        {
        stack.push(root.right);
        }
        if(root.left!=null)
        {
        stack.push(root.left);
        }
      return preorder; 
      }
    }
}
