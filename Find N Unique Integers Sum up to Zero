/*
Problem Statement:
Given an integer n, return any array containing n unique integers such that they add up to 0.

Example 1:
Input: n = 5
Output: [-7,-1,1,3,4]
Explanation: These arrays also are accepted [-5,-1,1,2,3] , [-3,-1,2,-2,4].

Example 2:
Input: n = 3
Output: [-1,0,1]

Example 3:
Input: n = 1
Output: [0]
 
Constraints:
1 <= n <= 1000
 
*/
class Solution {
    public int[] sumZero(int n) 
    {
        //Approach1: get (n-1) natural numbers sum and then add (-)(n-1) to it, to make it all zero
        //sum of n natural number=>n*(n-1)/2
        int[] result=new int[n];
        int index=0;
        int sum=0;
        for(int i=1;i<n;i++)
        {
            result[index]=i;
            sum+=i;
            index++;
        }
       result[n-1]=-sum;
       return result;
    }
}
//TC:O(n)
//SC:O(1) //if consider result space is negligible as return type
